#!/bin/bash
# kurbeScript: Automates starting a local Kubernetes cluster with minikube and verification.

# Exit immediately if a command exits with a non-zero status.
set -e

echo "--- 1. Checking for minikube installation (MANDATORY PREREQUISITE) ---"
# Check if the 'minikube' command exists in the system PATH
if ! command -v minikube &> /dev/null
then
    echo "--------------------------------------------------------" >&2
    echo "ERROR: 'minikube' is required but was not found." >&2
    echo "Please install minikube to run this script." >&2
    echo "--------------------------------------------------------" >&2
    exit 1
fi
echo "âœ… minikube found. Proceeding with cluster startup..."

echo -e "\n--- 2. Starting local Kubernetes cluster via minikube ---"
# This command starts the minikube cluster. If it's already running, it confirms the status.
# Using --driver=docker is a common and reliable default for most systems.
minikube start --driver=docker

echo -e "\n--- 3. Verifying cluster status (kubectl cluster-info) ---"
# Display the status of the minikube instance
minikube status

echo -e "\nCluster Endpoint Information:"
# Verify that kubectl can communicate with the cluster
kubectl cluster-info

echo -e "\n--- 4. Retrieving available pods in all namespaces (kubectl get pods) ---"
# List all pods, including the system components, to ensure core services are running
kubectl get pods --all-namespaces --watch=false

echo -e "\n--- Script execution complete. Your minikube cluster is ready to use! ---"
